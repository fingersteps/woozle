//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Runtime.Serialization;

namespace Woozle.Model
{
    [Serializable]
    public partial class Function : WoozleObject
    {
        public Function()
        {
            this.FunctionPermissions = new ObservableCollection<FunctionPermission>();
        }
    
        private byte[] icon;
        private string name;
        private string description;
        private int moduleid;
        private string logicalid;
        private int translationid;
        private short sequence;
    
        public byte[] Icon 
    	{ 
    		get { return this.icon;} 
    		set { 
    			if(this.icon != value)
    			{
    				this.icon = value;
    			}
    		}
    	}
        public string Name 
    	{ 
    		get { return this.name;} 
    		set { 
    			if(this.name != value)
    			{
    				this.name = value;
    			}
    		}
    	}
        public string Description 
    	{ 
    		get { return this.description;} 
    		set { 
    			if(this.description != value)
    			{
    				this.description = value;
    			}
    		}
    	}
        public int ModuleId 
    	{ 
    		get { return this.moduleid;} 
    		set { 
    			if(this.moduleid != value)
    			{
    				this.moduleid = value;
    			}
    		}
    	}
        public string LogicalId 
    	{ 
    		get { return this.logicalid;} 
    		set { 
    			if(this.logicalid != value)
    			{
    				this.logicalid = value;
    			}
    		}
    	}
        public int TranslationId 
    	{ 
    		get { return this.translationid;} 
    		set { 
    			if(this.translationid != value)
    			{
    				this.translationid = value;
    			}
    		}
    	}
    	
    	/// <summary>
        /// To use the translated value directly it needs to be filled explicit
        /// </summary>
        public string TranslatedValue 	{ get; set; }
    
        public short Sequence 
    	{ 
    		get { return this.sequence;} 
    		set { 
    			if(this.sequence != value)
    			{
    				this.sequence = value;
    			}
    		}
    	}
    
    
    private ObservableCollection<FunctionPermission> functionpermissions;
    
    public virtual ObservableCollection<FunctionPermission> FunctionPermissions 
    { 
    	get { return functionpermissions; } 
    	set
    	{
    		functionpermissions = value;
    	}
    }
    
    
    public virtual Module Module { get; set; }
    
    
    public virtual Translation Translation { get; set; }
    
    
    
    public override bool Equals(object obj)
    {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (GetType() != obj.GetType())
            return false;
    	//objects are equal when they are not new (Id != 0) and the Ids are equal
        WoozleObject other = (WoozleObject)obj;
        if (Id == 0 || Id != other.Id)
            return false;
        return true;
    }
    
    public override int GetHashCode()
    {
        int prime = 31;
    	int result = 1;
    	result = prime * result + Id;
    	return result;
    }
    }
    
}
