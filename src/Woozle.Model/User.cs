//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Runtime.Serialization;

namespace Woozle.Model
{
    [Serializable]
    public partial class User : WoozleObject, IManagedConcurrency
    {
        public User()
        {
            this.UserMandatorRoles = new ObservableCollection<UserMandatorRole>();
        }
    
        private string username;
        private bool flagactive;
        private Nullable<System.DateTime> lastlogin;
        private Nullable<System.DateTime> lastpasswordchange;
        private int languageid;
        private int flagactivestatusid;
        private byte[] changecounter;
        private string firstname;
        private string lastname;
        private string email;
        private string passwordhash;
        private string passwordsalt;
    
        public string Username 
    	{ 
    		get { return this.username;} 
    		set { 
    			if(this.username != value)
    			{
    				this.username = value;
    			}
    		}
    	}
        public bool FlagActive 
    	{ 
    		get { return this.flagactive;} 
    		set { 
    			if(this.flagactive != value)
    			{
    				this.flagactive = value;
    			}
    		}
    	}
        public Nullable<System.DateTime> LastLogin 
    	{ 
    		get { return this.lastlogin;} 
    		set { 
    			if(this.lastlogin != value)
    			{
    				this.lastlogin = value;
    			}
    		}
    	}
        public Nullable<System.DateTime> LastPasswordChange 
    	{ 
    		get { return this.lastpasswordchange;} 
    		set { 
    			if(this.lastpasswordchange != value)
    			{
    				this.lastpasswordchange = value;
    			}
    		}
    	}
        public int LanguageId 
    	{ 
    		get { return this.languageid;} 
    		set { 
    			if(this.languageid != value)
    			{
    				this.languageid = value;
    			}
    		}
    	}
        public int FlagActiveStatusId 
    	{ 
    		get { return this.flagactivestatusid;} 
    		set { 
    			if(this.flagactivestatusid != value)
    			{
    				this.flagactivestatusid = value;
    			}
    		}
    	}
        public byte[] ChangeCounter 
    	{ 
    		get { return this.changecounter;} 
    		set { 
    			if(this.changecounter != value)
    			{
    				this.changecounter = value;
    			}
    		}
    	}
        public string FirstName 
    	{ 
    		get { return this.firstname;} 
    		set { 
    			if(this.firstname != value)
    			{
    				this.firstname = value;
    			}
    		}
    	}
        public string LastName 
    	{ 
    		get { return this.lastname;} 
    		set { 
    			if(this.lastname != value)
    			{
    				this.lastname = value;
    			}
    		}
    	}
        public string Email 
    	{ 
    		get { return this.email;} 
    		set { 
    			if(this.email != value)
    			{
    				this.email = value;
    			}
    		}
    	}
        public string PasswordHash 
    	{ 
    		get { return this.passwordhash;} 
    		set { 
    			if(this.passwordhash != value)
    			{
    				this.passwordhash = value;
    			}
    		}
    	}
        public string PasswordSalt 
    	{ 
    		get { return this.passwordsalt;} 
    		set { 
    			if(this.passwordsalt != value)
    			{
    				this.passwordsalt = value;
    			}
    		}
    	}
    
    
    public virtual Language Language { get; set; }
    
    
    public virtual Status Status { get; set; }
    
    
    private ObservableCollection<UserMandatorRole> usermandatorroles;
    
    public virtual ObservableCollection<UserMandatorRole> UserMandatorRoles 
    { 
    	get { return usermandatorroles; } 
    	set
    	{
    		usermandatorroles = value;
    	}
    }
    
    
    
    public override bool Equals(object obj)
    {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (GetType() != obj.GetType())
            return false;
    	//objects are equal when they are not new (Id != 0) and the Ids are equal
        WoozleObject other = (WoozleObject)obj;
        if (Id == 0 || Id != other.Id)
            return false;
        return true;
    }
    
    public override int GetHashCode()
    {
        int prime = 31;
    	int result = 1;
    	result = prime * result + Id;
    	return result;
    }
    }
    
}
